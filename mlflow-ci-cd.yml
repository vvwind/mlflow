name: MLFlow CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    services:
      minio:
        image: minio/minio
        env:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: minio123
        ports: [ "9000:9000", "9001:9001" ]
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
          server /data
      
      mlflow:
        image: python:3.9
        env:
          MLFLOW_S3_ENDPOINT_URL: http://minio:9000
          AWS_ACCESS_KEY_ID: minio
          AWS_SECRET_ACCESS_KEY: minio123
        ports: [ "5000:5000" ]
        options: >-
          --health-cmd "curl -f http://localhost:5000 || exit 1"
        volumes:
          - ./:/app
        working-directory: /app
        command: >-
          bash -c "pip install mlflow boto3 &&
          mlflow server --host 0.0.0.0 --port 5000
          --backend-store-uri sqlite:///mlflow.db
          --default-artifact-root s3://mlflow-artifacts"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install mlflow boto3 scikit-learn

    - name: Train model
      run: |
        python train.py
      env:
        MLFLOW_TRACKING_URI: http://localhost:5000
        AWS_ACCESS_KEY_ID: minio
        AWS_SECRET_ACCESS_KEY: minio123
        MLFLOW_S3_ENDPOINT_URL: http://localhost:9000

    - name: Build and push Docker images
      run: |
        docker build -t ml-training -f train.Dockerfile .
        docker build -t ml-serving -f serve.Dockerfile .
        echo "IMAGE_TAG=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

    - name: Deploy to staging
      if: github.ref == 'refs/heads/main'
      run: |
        docker-compose up -d
        sleep 10  # Wait for services to start
        curl -X POST http://localhost:1234/invocations \
          -H "Content-Type: application/json" \
          -d '{"inputs": [[5.1, 3.5, 1.4, 0.2]]}'